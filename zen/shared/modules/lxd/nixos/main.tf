terraform {
  required_providers {
    lxd = {
      source  = "terraform-lxd/lxd"
      version = "2.0.0"
    }
  }
}

variable "project" {
  type = string
}

variable "instance" {
  type = string
}

variable "config" {
  type = map(string)
}

//noinspection MissingProperty
resource "lxd_instance_file" "nixos_lxd_nix" {
  project     = var.project
  instance    = var.instance
  target_path = "/etc/nixos/lxd.nix"
  mode        = "0644"
  content     = <<EOFTF
{ lib, config, pkgs, ... }:

# WARNING: THIS CONFIGURATION IS AUTOGENERATED AND WILL BE OVERWRITTEN AUTOMATICALLY

{
  imports = [
  %{~ for key, _ in var.config ~}
    ./lxd/${key}.nix
  %{~ endfor ~}
  ];

  networking.hostName = "${var.instance}";
}
EOFTF
}

resource "null_resource" "nixos_lxd_folder" {
  triggers = {
    project  = var.project
    instance = var.instance
  }

  provisioner "local-exec" {
    command = join(" ", [
      "lxc",
      "exec",
      "--project",
      var.project,
      var.instance,
      "--",
      "mkdir /etc/nixos/lxd",
    ])
  }
}

//noinspection MissingProperty
resource "lxd_instance_file" "nixos_lxd_config_nix" {
  for_each = var.config
  depends_on = [ null_resource.nixos_lxd_folder ]

  project     = var.project
  instance    = var.instance
  target_path = "/etc/nixos/lxd/${each.key}.nix"
  mode        = "0644"
  content     = each.value
}

resource "null_resource" "config" {
  triggers = {
    project  = var.project
    instance = var.instance
    config   = join("\n",
      [for key, value in var.config: "${key}=${sha512(value)}"]
    )
  }

  provisioner "local-exec" {
    command = join(" ", [
      "lxc",
      "exec",
      "--project",
      var.project,
      var.instance,
      "--",
      "bash -c 'source /etc/profile && nixos-rebuild switch'",
    ])
  }
}
