apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: minecraft-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: minecraftservers.minecraft.jameslaverack.com
spec:
  group: minecraft.jameslaverack.com
  names:
    kind: MinecraftServer
    listKind: MinecraftServerList
    plural: minecraftservers
    singular: minecraftserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.minecraftVersion
      name: Version
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MinecraftServer is the Schema for the minecraftservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MinecraftServerSpec defines the desired state of MinecraftServer
            properties:
              allowList:
                items:
                  description: Player is a Minecraft player defined by a username
                    or a UUID
                  properties:
                    name:
                      type: string
                    uuid:
                      type: string
                  type: object
                type: array
              dynmap:
                properties:
                  enabled:
                    type: boolean
                required:
                - enabled
                type: object
              eula:
                enum:
                - Accepted
                - NotAccepted
                type: string
              externalServiceIP:
                type: string
              maxPlayers:
                type: integer
              minecraftVersion:
                type: string
              monitoring:
                properties:
                  enabled:
                    type: boolean
                required:
                - enabled
                type: object
              motd:
                type: string
              opsList:
                items:
                  description: Player is a Minecraft player defined by a username
                    or a UUID
                  properties:
                    name:
                      type: string
                    uuid:
                      type: string
                  type: object
                type: array
              type:
                enum:
                - Paper
                - Forge
                type: string
              vanillaTweaks:
                properties:
                  experimental:
                    items:
                      type: string
                    type: array
                  hermitcraft:
                    items:
                      type: string
                    type: array
                  items:
                    items:
                      type: string
                    type: array
                  mobs:
                    items:
                      type: string
                    type: array
                  survival:
                    items:
                      type: string
                    type: array
                  teleportation:
                    items:
                      type: string
                    type: array
                  utilities:
                    items:
                      type: string
                    type: array
                type: object
              viewDistance:
                type: integer
              world:
                properties:
                  persistentVolumeClaim:
                    description: PersistentVolumeClaimVolumeSource references the
                      user's PVC in the same namespace. This volume finds the bound
                      PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                      is, essentially, a wrapper around another type of volume that
                      is owned by someone else (the system).
                    properties:
                      claimName:
                        description: 'claimName is the name of a PersistentVolumeClaim
                          in the same namespace as the pod using this volume. More
                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        type: string
                      readOnly:
                        description: readOnly Will force the ReadOnly setting in VolumeMounts.
                          Default false.
                        type: boolean
                    required:
                    - claimName
                    type: object
                type: object
            required:
            - eula
            - externalServiceIP
            - maxPlayers
            - minecraftVersion
            - motd
            - type
            - viewDistance
            type: object
          status:
            description: MinecraftServerStatus defines the observed state of MinecraftServer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minecraft-operator-controller-manager
  namespace: minecraft-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: minecraft-operator-leader-election-role
  namespace: minecraft-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: minecraft-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - minecraft.jameslaverack.com
  resources:
  - minecraftservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - minecraft.jameslaverack.com
  resources:
  - minecraftservers/finalizers
  verbs:
  - update
- apiGroups:
  - minecraft.jameslaverack.com
  resources:
  - minecraftservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - podmonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: minecraft-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: minecraft-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minecraft-operator-leader-election-rolebinding
  namespace: minecraft-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: minecraft-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: minecraft-operator-controller-manager
  namespace: minecraft-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: minecraft-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: minecraft-operator-manager-role
subjects:
- kind: ServiceAccount
  name: minecraft-operator-controller-manager
  namespace: minecraft-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: minecraft-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: minecraft-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: minecraft-operator-controller-manager
  namespace: minecraft-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 95b821c2.jameslaverack.com
kind: ConfigMap
metadata:
  name: minecraft-operator-manager-config
  namespace: minecraft-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: minecraft-operator-controller-manager-metrics-service
  namespace: minecraft-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: minecraft-operator-controller-manager
  namespace: minecraft-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/jameslaverack/kubernetes-minecraft-operator:v0.3.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: minecraft-operator-controller-manager
      terminationGracePeriodSeconds: 10
